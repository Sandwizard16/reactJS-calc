{"version":3,"sources":["components/key.jsx","components/input.jsx","components/ClearButton.jsx","App.js","reportWebVitals.js","index.js"],"names":["Key","isOperator","value","isNaN","onClick","props","handleClick","children","style","width","height","margin","display","justifyContent","alignItems","className","this","Component","Input","class","ClearButton","state","marginBottom","App","input","previousNumber","currentNumber","operator","handleInput","setState","console","log","handleDecimal","indexOf","handleClear","lastNumber","handleAddition","handleSubtraction","handleMultiplication","handleDivision","handleBackspace","number","slice","handleCalc","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43442877.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Key extends Component {\r\n  isOperator = (value) => {\r\n    return !isNaN(value) || value === \".\" || value === \"=\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={() => this.props.handleClick(this.props.children)}\r\n        style={{\r\n          width: 98,\r\n          height: 80,\r\n          margin: 1,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n        className={\r\n          this.isOperator(this.props.children)\r\n            ? `btn btn-primary btn-lg`\r\n            : `btn btn-danger btn-lg`\r\n        }\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Key;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/input.css\";\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    return <div class=\"input\">{this.props.value}</div>;\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ClearButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={this.props.handleClick}\r\n        className=\"btn btn-secondary btn-lg\"\r\n        style={{ marginBottom: 1 }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClearButton;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Key from \"./components/key\";\nimport Input from \"./components/input\";\nimport ClearButton from \"./components/ClearButton\";\n\nclass App extends Component {\n  state = {\n    input: \"\",\n    previousNumber: \"\",\n    currentNumber: \"\",\n    operator: \"\",\n  };\n\n  handleInput = (value) => {\n    this.setState({ input: this.state.input + value });\n    console.log(this.state.value);\n  };\n\n  handleDecimal = (value) => {\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + value });\n    }\n  };\n\n  handleClear = () => {\n    this.setState({\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      lastNumber: \"\",\n      operator: \"\",\n    });\n  };\n\n  handleAddition = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"+\";\n  };\n\n  handleSubtraction = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"-\";\n  };\n\n  handleMultiplication = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"x\";\n  };\n\n  handleDivision = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"/\";\n  };\n\n  handleBackspace = () => {\n    const number = this.state.input.slice(0, -1);\n    this.setState({ input: number });\n  };\n\n  handleCalc = () => {\n    this.state.currentNumber = this.state.input;\n\n    if (this.state.operator === \"+\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) +\n          parseInt(this.state.currentNumber),\n      });\n    } else if (this.state.operator === \"-\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) -\n          parseInt(this.state.currentNumber),\n      });\n    } else if (this.state.operator === \"x\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) *\n          parseInt(this.state.currentNumber),\n      });\n    } else if (this.state.operator === \"/\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) /\n          parseInt(this.state.currentNumber),\n      });\n    }\n\n    this.state.previousNumber = \"\";\n    this.state.operator = \"\";\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div class=\"wrapper\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <Input value={this.state.previousNumber}></Input>\n            </div>\n            <div class=\"row\">\n              <Input value={this.state.operator}></Input>\n            </div>\n            <div class=\"row\">\n              <Input value={this.state.input}></Input>\n            </div>\n            <div className=\"row\">\n              <Key handleClick={this.handleInput}>7</Key>\n              <Key handleClick={this.handleInput}>8</Key>\n              <Key handleClick={this.handleInput}>9</Key>\n              <Key handleClick={this.handleDivision}>/</Key>\n            </div>\n            <div className=\"row\">\n              <Key handleClick={this.handleInput}>4</Key>\n              <Key handleClick={this.handleInput}>5</Key>\n              <Key handleClick={this.handleInput}>6</Key>\n              <Key handleClick={this.handleMultiplication}>x</Key>\n            </div>\n            <div className=\"row\">\n              <Key handleClick={this.handleInput}>1</Key>\n              <Key handleClick={this.handleInput}>2</Key>\n              <Key handleClick={this.handleInput}>3</Key>\n              <Key handleClick={this.handleAddition}>+</Key>\n            </div>\n            <div className=\"row\">\n              <Key handleClick={this.handleDecimal}>.</Key>\n              <Key handleClick={this.handleInput}>0</Key>\n              <Key handleClick={this.handleCalc}>=</Key>\n              <Key handleClick={this.handleSubtraction}>-</Key>\n            </div>\n            <div class=\"row\">\n              <ClearButton handleClick={this.handleClear}>\n                Clear All\n              </ClearButton>\n              <ClearButton handleClick={this.handleBackspace}>\n                BackSpace\n              </ClearButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}